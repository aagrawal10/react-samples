{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchfield","fetch","then","resp","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAIaA,EAAO,SAAAC,GAChB,OACI,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,mCAAML,EAAMI,QAAQE,KAApB,OACA,kCAAKN,EAAMI,QAAQG,MAAnB,WCHGC,G,MAAW,SAAAR,GACpB,OACE,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCNpBM,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACvC,OACE,uBACEZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCgCDG,G,wDAjCb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXR,SAAU,GACVS,YAAa,IALH,E,qDASd,WAAqB,IAAD,OAClBC,MAAM,8CACLC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEf,SAAUc,S,oBAG3C,WAAU,IAAD,OACP,EAAgCE,KAAKR,MAA9BR,EAAP,EAAOA,SAAUS,EAAjB,EAAiBA,YACXQ,EAAmBjB,EAASkB,QAChC,SAAAvB,GAAO,OAAIA,EAAQE,KAAKsB,cAAcC,SAASX,EAAYU,kBAG7D,OACE,sBAAK3B,UAAU,MAAf,UACE,cAAC,EAAD,CACEW,YAAY,kBACZC,aAAc,SAAAiB,GAAC,OAAI,EAAKN,SAAS,CAACN,YAAaY,EAAEC,OAAOC,WAE1D,cAAC,EAAD,CAAUvB,SAAUiB,W,GA7BVO,IAAMC,YCKTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3af96608.chunk.js","sourcesContent":["import React from \"react\";\n\nimport './card.styles.css';\n\nexport const Card = props => {\n    return (\n        <div className=\"card-container\">\n          <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}></img>\n          <h3> {props.monster.name} </h3>\n          <p> {props.monster.email} </p>\n        </div>\n    )\n}","import React from \"react\";\n\nimport { Card } from \"../card/card.component\";\n\nimport './card-list.styles.css';\n\nexport const CardList = props => {\n    return (\n      <div className='card-list'>\n          {props.monsters.map(monster => (\n              <Card key={monster.id} monster={monster}>\n              </Card>\n          ))}\n      </div>\n    );\n}","import React from \"react\";\n\nimport './search-box.styles.css';\n\nexport const SearchBox = ({ placeholder, handleChange }) => {\n  return (\n    <input \n      className=\"search\"\n      type=\"search\"\n      placeholder={placeholder}\n      onChange={handleChange}\n    />\n  );\n}","import React from 'react';\n\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nimport './App.css';\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchfield: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then(resp => resp.json())\n    .then(users => this.setState({ monsters: users }));\n  }\n\n  render() {\n    const {monsters, searchfield} = this.state;\n    const filteredMonsters = monsters.filter(\n      monster => monster.name.toLowerCase().includes(searchfield.toLowerCase())\n    );\n    \n    return (\n      <div className=\"App\">\n        <SearchBox \n          placeholder=\"search monsters\"\n          handleChange={e => this.setState({searchfield: e.target.value})}\n        />\n        <CardList monsters={filteredMonsters}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}